using MineSharp.Core.Common;
using MineSharp.Data;
using MineSharp.Data.Protocol;

namespace MineSharp.Protocol.Packets.Serverbound.Login;

/// <summary>
/// Packet to implement a custom login flow.
/// See https://wiki.vg/Protocol#Login_Plugin_Response
/// </summary>
public class LoginPluginResponsePacket : IPacket
{
    /// <summary>
    /// Unique message id generated by the server.
    /// </summary>
    public required int MessageId { get; init; }
    
    /// <summary>
    /// Optional byte array. Null if the client did not understand the request.
    /// </summary>
    public required byte[]? Data { get; init; }
    
    /// <inheritdoc />
    public PacketType Type => PacketType.SB_Login_LoginPluginResponse;

    /// <inheritdoc />
    public void Write(PacketBuffer buffer, MinecraftData version)
    {
        buffer.WriteVarInt(MessageId);
        buffer.WriteBool(Data != null);

        if (Data != null)
        {
            buffer.WriteBytes(Data);
        }
    }

    /// <inheritdoc />
    public static IPacket Read(PacketBuffer buffer, MinecraftData version)
    {
        var messageId = buffer.ReadVarInt();
        var hasData = buffer.ReadBool();
        var data = hasData switch
        {
            true => buffer.RestBuffer(),
            false => null
        };

        return new LoginPluginResponsePacket() { MessageId = messageId, Data = data };
    }
}
